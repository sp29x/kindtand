{"version":3,"sources":["svg4everybody.js","bodyScrollLock.min.js"],"names":["root","factory","define","amd","svg4everybody","module","exports","this","embed","parent","svg","target","fragment","document","createDocumentFragment","viewBox","hasAttribute","getAttribute","setAttribute","clone","cloneNode","childNodes","length","appendChild","firstChild","rawopts","opts","Object","inIframe","window","top","self","polyfill","test","navigator","userAgent","match","requests","requestAnimationFrame","setTimeout","uses","getElementsByTagName","numberOfSvgUseElementsToBypass","oninterval","index","xhr","use","parentNode","node","nodeName","toLowerCase","getSVGAncestor","src","attributeName","validate","removeChild","url","srcSplit","split","shift","id","join","XMLHttpRequest","open","send","_embeds","push","onreadystatechange","cachedDocument","readyState","_cachedDocument","implementation","createHTMLDocument","body","innerHTML","responseText","_cachedTarget","splice","map","item","getElementById","loadreadystatechange","e","t","o","bodyScrollLock","r","Array","isArray","from","defineProperty","value","l","addEventListener","passive","removeEventListener","f","c","some","options","allowTouchMove","m","event","touches","preventDefault","v","style","paddingRight","s","overflow","d","platform","u","a","disableBodyScroll","i","n","targetElement","concat","ontouchstart","targetTouches","clientY","ontouchmove","scrollTop","scrollHeight","clientHeight","stopPropagation","console","error","reserveScrollBarGap","innerWidth","documentElement","clientWidth","clearAllBodyScrollLocks","forEach","enableBodyScroll","filter"],"mappings":"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","file":"vendor.min.js","sourcesContent":["!function(root, factory) {\n    \"function\" == typeof define && define.amd ? // AMD. Register as an anonymous module unless amdModuleId is set\n    define([], function() {\n        return root.svg4everybody = factory();\n    }) : \"object\" == typeof module && module.exports ? // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory() : root.svg4everybody = factory();\n}(this, function() {\n    /*! svg4everybody v2.1.9 | github.com/jonathantneal/svg4everybody */\n    function embed(parent, svg, target) {\n        // if the target exists\n        if (target) {\n            // create a document fragment to hold the contents of the target\n            var fragment = document.createDocumentFragment(), viewBox = !svg.hasAttribute(\"viewBox\") && target.getAttribute(\"viewBox\");\n            // conditionally set the viewBox on the svg\n            viewBox && svg.setAttribute(\"viewBox\", viewBox);\n            // copy the contents of the clone into the fragment\n            for (// clone the target\n            var clone = target.cloneNode(!0); clone.childNodes.length; ) {\n                fragment.appendChild(clone.firstChild);\n            }\n            // append the fragment into the svg\n            parent.appendChild(fragment);\n        }\n    }\n    function loadreadystatechange(xhr) {\n        // listen to changes in the request\n        xhr.onreadystatechange = function() {\n            // if the request is ready\n            if (4 === xhr.readyState) {\n                // get the cached html document\n                var cachedDocument = xhr._cachedDocument;\n                // ensure the cached html document based on the xhr response\n                cachedDocument || (cachedDocument = xhr._cachedDocument = document.implementation.createHTMLDocument(\"\"), \n                cachedDocument.body.innerHTML = xhr.responseText, xhr._cachedTarget = {}), // clear the xhr embeds list and embed each item\n                xhr._embeds.splice(0).map(function(item) {\n                    // get the cached target\n                    var target = xhr._cachedTarget[item.id];\n                    // ensure the cached target\n                    target || (target = xhr._cachedTarget[item.id] = cachedDocument.getElementById(item.id)), \n                    // embed the target into the svg\n                    embed(item.parent, item.svg, target);\n                });\n            }\n        }, // test the ready state change immediately\n        xhr.onreadystatechange();\n    }\n    function svg4everybody(rawopts) {\n        function oninterval() {\n            // while the index exists in the live <use> collection\n            for (// get the cached <use> index\n            var index = 0; index < uses.length; ) {\n                // get the current <use>\n                var use = uses[index], parent = use.parentNode, svg = getSVGAncestor(parent), src = use.getAttribute(\"xlink:href\") || use.getAttribute(\"href\");\n                if (!src && opts.attributeName && (src = use.getAttribute(opts.attributeName)), \n                svg && src) {\n                    if (polyfill) {\n                        if (!opts.validate || opts.validate(src, svg, use)) {\n                            // remove the <use> element\n                            parent.removeChild(use);\n                            // parse the src and get the url and id\n                            var srcSplit = src.split(\"#\"), url = srcSplit.shift(), id = srcSplit.join(\"#\");\n                            // if the link is external\n                            if (url.length) {\n                                // get the cached xhr request\n                                var xhr = requests[url];\n                                // ensure the xhr request exists\n                                xhr || (xhr = requests[url] = new XMLHttpRequest(), xhr.open(\"GET\", url), xhr.send(), \n                                xhr._embeds = []), // add the svg and id as an item to the xhr embeds list\n                                xhr._embeds.push({\n                                    parent: parent,\n                                    svg: svg,\n                                    id: id\n                                }), // prepare the xhr ready state change event\n                                loadreadystatechange(xhr);\n                            } else {\n                                // embed the local id into the svg\n                                embed(parent, svg, document.getElementById(id));\n                            }\n                        } else {\n                            // increase the index when the previous value was not \"valid\"\n                            ++index, ++numberOfSvgUseElementsToBypass;\n                        }\n                    }\n                } else {\n                    // increase the index when the previous value was not \"valid\"\n                    ++index;\n                }\n            }\n            // continue the interval\n            (!uses.length || uses.length - numberOfSvgUseElementsToBypass > 0) && requestAnimationFrame(oninterval, 67);\n        }\n        var polyfill, opts = Object(rawopts), newerIEUA = /\\bTrident\\/[567]\\b|\\bMSIE (?:9|10)\\.0\\b/, webkitUA = /\\bAppleWebKit\\/(\\d+)\\b/, olderEdgeUA = /\\bEdge\\/12\\.(\\d+)\\b/, edgeUA = /\\bEdge\\/.(\\d+)\\b/, inIframe = window.top !== window.self;\n        polyfill = \"polyfill\" in opts ? opts.polyfill : newerIEUA.test(navigator.userAgent) || (navigator.userAgent.match(olderEdgeUA) || [])[1] < 10547 || (navigator.userAgent.match(webkitUA) || [])[1] < 537 || edgeUA.test(navigator.userAgent) && inIframe;\n        // create xhr requests object\n        var requests = {}, requestAnimationFrame = window.requestAnimationFrame || setTimeout, uses = document.getElementsByTagName(\"use\"), numberOfSvgUseElementsToBypass = 0;\n        // conditionally start the interval if the polyfill is active\n        polyfill && oninterval();\n    }\n    function getSVGAncestor(node) {\n        for (var svg = node; \"svg\" !== svg.nodeName.toLowerCase() && (svg = svg.parentNode); ) {}\n        return svg;\n    }\n    return svg4everybody;\n});","!function(e,t){if(\"function\"==typeof define&&define.amd)define([\"exports\"],t);else if(\"undefined\"!=typeof exports)t(exports);else{var o={};t(o),e.bodyScrollLock=o}}(this,function(exports){\"use strict\";function r(e){if(Array.isArray(e)){for(var t=0,o=Array(e.length);t<e.length;t++)o[t]=e[t];return o}return Array.from(e)}Object.defineProperty(exports,\"__esModule\",{value:!0});var l=!1;if(\"undefined\"!=typeof window){var e={get passive(){l=!0}};window.addEventListener(\"testPassive\",null,e),window.removeEventListener(\"testPassive\",null,e)}var d=\"undefined\"!=typeof window&&window.navigator&&window.navigator.platform&&/iP(ad|hone|od)/.test(window.navigator.platform),c=[],u=!1,a=-1,s=void 0,v=void 0,f=function(t){return c.some(function(e){return!(!e.options.allowTouchMove||!e.options.allowTouchMove(t))})},m=function(e){var t=e||window.event;return!!f(t.target)||(1<t.touches.length||(t.preventDefault&&t.preventDefault(),!1))},o=function(){setTimeout(function(){void 0!==v&&(document.body.style.paddingRight=v,v=void 0),void 0!==s&&(document.body.style.overflow=s,s=void 0)})};exports.disableBodyScroll=function(i,e){if(d){if(!i)return void console.error(\"disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.\");if(i&&!c.some(function(e){return e.targetElement===i})){var t={targetElement:i,options:e||{}};c=[].concat(r(c),[t]),i.ontouchstart=function(e){1===e.targetTouches.length&&(a=e.targetTouches[0].clientY)},i.ontouchmove=function(e){var t,o,n,r;1===e.targetTouches.length&&(o=i,r=(t=e).targetTouches[0].clientY-a,!f(t.target)&&(o&&0===o.scrollTop&&0<r?m(t):(n=o)&&n.scrollHeight-n.scrollTop<=n.clientHeight&&r<0?m(t):t.stopPropagation()))},u||(document.addEventListener(\"touchmove\",m,l?{passive:!1}:void 0),u=!0)}}else{n=e,setTimeout(function(){if(void 0===v){var e=!!n&&!0===n.reserveScrollBarGap,t=window.innerWidth-document.documentElement.clientWidth;e&&0<t&&(v=document.body.style.paddingRight,document.body.style.paddingRight=t+\"px\")}void 0===s&&(s=document.body.style.overflow,document.body.style.overflow=\"hidden\")});var o={targetElement:i,options:e||{}};c=[].concat(r(c),[o])}var n},exports.clearAllBodyScrollLocks=function(){d?(c.forEach(function(e){e.targetElement.ontouchstart=null,e.targetElement.ontouchmove=null}),u&&(document.removeEventListener(\"touchmove\",m,l?{passive:!1}:void 0),u=!1),c=[],a=-1):(o(),c=[])},exports.enableBodyScroll=function(t){if(d){if(!t)return void console.error(\"enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.\");t.ontouchstart=null,t.ontouchmove=null,c=c.filter(function(e){return e.targetElement!==t}),u&&0===c.length&&(document.removeEventListener(\"touchmove\",m,l?{passive:!1}:void 0),u=!1)}else 1===c.length&&c[0].targetElement===t?(o(),c=[]):c=c.filter(function(e){return e.targetElement!==t})}});\n"]}